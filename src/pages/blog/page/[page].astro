---
import Site from '@layouts/Site.astro';
import Header from '@layouts/Header.astro';
import ArticleEntry from "@layouts/ArticleEntry.astro";

import { latestBlogposts, entryToArticle } from 'src/utils/helpers';
import type { Page } from 'astro';

// 1. Generate a new path for every collection entry
export async function getStaticPaths( { paginate }: { paginate: any }) {
    let blogposts = (await latestBlogposts()).map(entryToArticle);
    return paginate(blogposts, { pageSize: 5 });
}

interface Props {
	page: Page;
}

const { page } = Astro.props;
---

<Site title="Blog">
    <Header 
        title="Helmgast-bloggen" 
    />
    <div class="container">
        <div class="row">
            <aside class="col-lg-2 col-md-12 col-sm-12 intro-aside margin-below">
            
            <a class="socialtw" href="https://twitter.com/share?url=https://helmgast.se/meta/blog/" target="_blank">
            <svg class="lore-icon lore-icon-twitter">
                <use xlink:href="#lore-twitter"></use>
            </svg>
            </a>
            
            <a class="socialfb" href="https://www.facebook.com/sharer.php?u=https://helmgast.se/meta/blog/" target="_blank">
            <svg class="lore-icon lore-icon-facebook">
                <use xlink:href="#lore-facebook2"></use>
            </svg>
            </a>
            
            </aside>

            <div class="col-lg-9 col-md-12 col-sm-12 content">
                <h3>Page {page.currentPage}</h3>
                {page.data.map(( {props} ) => <ArticleEntry article={props.article} />)}
                
                <nav aria-label="...">
                    <ul class="pager">
                      {page.url.prev && <li class="previous"><a href={page.url.prev}><span aria-hidden="true">&larr;</span> Newer</a></li>}

                      {page.url.next && <li class="next"><a href={page.url.next}>Older <span aria-hidden="true">&rarr;</span></a></li>}
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</Site>